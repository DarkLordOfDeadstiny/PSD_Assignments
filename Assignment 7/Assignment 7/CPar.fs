// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | PREINC
  | PREDEC
  | QMARK
  | COLON
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_PREINC
    | TOKEN_PREDEC
    | TOKEN_QMARK
    | TOKEN_COLON
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | CHAR  -> 25 
  | ELSE  -> 26 
  | IF  -> 27 
  | INT  -> 28 
  | NULL  -> 29 
  | PRINT  -> 30 
  | PRINTLN  -> 31 
  | RETURN  -> 32 
  | VOID  -> 33 
  | WHILE  -> 34 
  | FOR  -> 35 
  | PREINC  -> 36 
  | PREDEC  -> 37 
  | QMARK  -> 38 
  | COLON  -> 39 
  | CSTSTRING _ -> 40 
  | NAME _ -> 41 
  | CSTINT _ -> 42 
  | CSTBOOL _ -> 43 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_CHAR 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_INT 
  | 29 -> TOKEN_NULL 
  | 30 -> TOKEN_PRINT 
  | 31 -> TOKEN_PRINTLN 
  | 32 -> TOKEN_RETURN 
  | 33 -> TOKEN_VOID 
  | 34 -> TOKEN_WHILE 
  | 35 -> TOKEN_FOR 
  | 36 -> TOKEN_PREINC 
  | 37 -> TOKEN_PREDEC 
  | 38 -> TOKEN_QMARK 
  | 39 -> TOKEN_COLON 
  | 40 -> TOKEN_CSTSTRING 
  | 41 -> TOKEN_NAME 
  | 42 -> TOKEN_CSTINT 
  | 43 -> TOKEN_CSTBOOL 
  | 46 -> TOKEN_end_of_input
  | 44 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_AtExprNotAccess 
    | 61 -> NONTERM_AtExprNotAccess 
    | 62 -> NONTERM_AtExprNotAccess 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Access 
    | 68 -> NONTERM_Exprs 
    | 69 -> NONTERM_Exprs 
    | 70 -> NONTERM_Exprs1 
    | 71 -> NONTERM_Exprs1 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Const 
    | 75 -> NONTERM_Const 
    | 76 -> NONTERM_Type 
    | 77 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 46 
let _fsyacc_tagOfErrorTerminal = 44

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | PREINC  -> "PREINC" 
  | PREDEC  -> "PREDEC" 
  | QMARK  -> "QMARK" 
  | COLON  -> "COLON" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | PREINC  -> (null : System.Object) 
  | PREDEC  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 17us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 71us; 54us; 72us; 54us; 75us; 54us; 76us; 54us; 85us; 54us; 86us; 54us; 102us; 54us; 103us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 6us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 107us; 102us; 104us; 103us; 105us; 15us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 71us; 73us; 72us; 74us; 75us; 77us; 76us; 77us; 85us; 87us; 86us; 87us; 102us; 45us; 103us; 45us; 9us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 106us; 76us; 108us; 86us; 110us; 102us; 47us; 103us; 47us; 48us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 67us; 69us; 68us; 70us; 71us; 48us; 72us; 48us; 75us; 48us; 76us; 48us; 81us; 84us; 82us; 83us; 85us; 48us; 86us; 48us; 90us; 93us; 91us; 92us; 94us; 97us; 95us; 96us; 98us; 101us; 99us; 100us; 102us; 48us; 103us; 48us; 116us; 117us; 119us; 142us; 122us; 123us; 124us; 125us; 143us; 127us; 144us; 128us; 145us; 129us; 146us; 130us; 147us; 131us; 148us; 132us; 149us; 133us; 150us; 134us; 151us; 135us; 152us; 136us; 153us; 137us; 154us; 138us; 155us; 140us; 161us; 139us; 172us; 141us; 175us; 142us; 48us; 65535us; 37us; 113us; 40us; 113us; 43us; 113us; 50us; 113us; 57us; 113us; 58us; 113us; 61us; 113us; 62us; 113us; 64us; 113us; 65us; 113us; 67us; 114us; 68us; 114us; 71us; 113us; 72us; 113us; 75us; 113us; 76us; 113us; 81us; 113us; 82us; 113us; 85us; 113us; 86us; 113us; 90us; 113us; 91us; 113us; 94us; 113us; 95us; 113us; 98us; 113us; 99us; 113us; 102us; 113us; 103us; 113us; 116us; 113us; 119us; 113us; 122us; 113us; 124us; 113us; 143us; 113us; 144us; 113us; 145us; 113us; 146us; 113us; 147us; 113us; 148us; 113us; 149us; 113us; 150us; 113us; 151us; 113us; 152us; 113us; 153us; 113us; 154us; 113us; 155us; 113us; 161us; 114us; 172us; 113us; 175us; 113us; 49us; 65535us; 37us; 115us; 40us; 115us; 43us; 115us; 50us; 115us; 57us; 115us; 58us; 115us; 61us; 115us; 62us; 115us; 64us; 115us; 65us; 115us; 67us; 115us; 68us; 115us; 71us; 115us; 72us; 115us; 75us; 115us; 76us; 115us; 81us; 115us; 82us; 115us; 85us; 115us; 86us; 115us; 90us; 115us; 91us; 115us; 94us; 115us; 95us; 115us; 98us; 115us; 99us; 115us; 102us; 115us; 103us; 115us; 116us; 115us; 119us; 115us; 122us; 115us; 124us; 115us; 143us; 115us; 144us; 115us; 145us; 115us; 146us; 115us; 147us; 115us; 148us; 115us; 149us; 115us; 150us; 115us; 151us; 115us; 152us; 115us; 153us; 115us; 154us; 115us; 155us; 115us; 161us; 115us; 169us; 171us; 172us; 115us; 175us; 115us; 53us; 65535us; 37us; 112us; 40us; 112us; 43us; 112us; 50us; 112us; 57us; 112us; 58us; 112us; 61us; 112us; 62us; 112us; 64us; 112us; 65us; 112us; 67us; 111us; 68us; 111us; 71us; 112us; 72us; 112us; 75us; 112us; 76us; 112us; 81us; 112us; 82us; 112us; 85us; 112us; 86us; 112us; 90us; 112us; 91us; 112us; 94us; 112us; 95us; 112us; 98us; 112us; 99us; 112us; 102us; 112us; 103us; 112us; 116us; 112us; 119us; 112us; 122us; 112us; 124us; 112us; 143us; 112us; 144us; 112us; 145us; 112us; 146us; 112us; 147us; 112us; 148us; 112us; 149us; 112us; 150us; 112us; 151us; 112us; 152us; 112us; 153us; 112us; 154us; 112us; 155us; 112us; 156us; 157us; 158us; 159us; 161us; 111us; 163us; 164us; 166us; 167us; 169us; 170us; 172us; 112us; 175us; 112us; 1us; 65535us; 119us; 120us; 2us; 65535us; 119us; 174us; 175us; 176us; 49us; 65535us; 37us; 160us; 40us; 160us; 43us; 160us; 50us; 160us; 57us; 160us; 58us; 160us; 61us; 160us; 62us; 160us; 64us; 160us; 65us; 160us; 67us; 160us; 68us; 160us; 71us; 160us; 72us; 160us; 75us; 160us; 76us; 160us; 81us; 160us; 82us; 160us; 85us; 160us; 86us; 160us; 90us; 160us; 91us; 160us; 94us; 160us; 95us; 160us; 98us; 160us; 99us; 160us; 102us; 160us; 103us; 160us; 116us; 160us; 119us; 160us; 122us; 160us; 124us; 160us; 143us; 160us; 144us; 160us; 145us; 160us; 146us; 160us; 147us; 160us; 148us; 160us; 149us; 160us; 150us; 160us; 151us; 160us; 152us; 160us; 153us; 160us; 154us; 160us; 155us; 160us; 161us; 160us; 169us; 160us; 172us; 160us; 175us; 160us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 51us; 55us; 62us; 78us; 88us; 137us; 186us; 236us; 290us; 292us; 295us; 345us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 32us; 1us; 23us; 14us; 24us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 14us; 26us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 32us; 33us; 1us; 28us; 3us; 28us; 32us; 33us; 16us; 28us; 32us; 33us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 28us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 28us; 3us; 28us; 32us; 33us; 1us; 28us; 1us; 28us; 2us; 28us; 32us; 1us; 28us; 4us; 29us; 34us; 61us; 64us; 3us; 29us; 61us; 64us; 15us; 29us; 34us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 29us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 29us; 2us; 29us; 34us; 1us; 29us; 2us; 29us; 34us; 1us; 29us; 2us; 29us; 34us; 1us; 29us; 1us; 29us; 1us; 30us; 2us; 30us; 35us; 1us; 30us; 2us; 30us; 35us; 15us; 30us; 35us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 30us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 30us; 2us; 30us; 35us; 1us; 30us; 1us; 31us; 2us; 31us; 36us; 1us; 31us; 2us; 31us; 36us; 15us; 31us; 36us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 31us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 31us; 2us; 31us; 36us; 15us; 31us; 36us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 31us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 31us; 2us; 31us; 36us; 15us; 31us; 36us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 31us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 31us; 2us; 31us; 36us; 1us; 31us; 2us; 31us; 36us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 35us; 4us; 37us; 40us; 64us; 67us; 3us; 37us; 40us; 67us; 1us; 38us; 2us; 38us; 61us; 1us; 39us; 1us; 40us; 14us; 40us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 2us; 41us; 63us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 14us; 42us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 43us; 14us; 43us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 44us; 14us; 45us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 13us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 67us; 15us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 70us; 71us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 2us; 58us; 67us; 1us; 59us; 2us; 59us; 67us; 1us; 60us; 2us; 61us; 64us; 1us; 61us; 1us; 62us; 2us; 62us; 67us; 1us; 63us; 1us; 64us; 2us; 64us; 67us; 1us; 64us; 2us; 65us; 66us; 2us; 65us; 67us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 69us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 123us; 125us; 128us; 130us; 145us; 147us; 149us; 151us; 155us; 157us; 161us; 178us; 193us; 195us; 199us; 201us; 203us; 206us; 208us; 213us; 217us; 233us; 248us; 250us; 253us; 255us; 258us; 260us; 263us; 265us; 267us; 269us; 272us; 274us; 277us; 293us; 308us; 310us; 313us; 315us; 317us; 320us; 322us; 325us; 341us; 356us; 358us; 361us; 377us; 392us; 394us; 397us; 413us; 428us; 430us; 433us; 435us; 438us; 440us; 442us; 444us; 446us; 448us; 453us; 457us; 459us; 462us; 464us; 466us; 481us; 484us; 486us; 488us; 490us; 492us; 507us; 509us; 524us; 526us; 541us; 556us; 571us; 586us; 601us; 616us; 631us; 646us; 661us; 676us; 691us; 706us; 720us; 735us; 750us; 766us; 768us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 797us; 799us; 802us; 804us; 807us; 809us; 811us; 814us; 816us; 818us; 821us; 823us; 826us; 829us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; |]
let _fsyacc_action_rows = 184
let _fsyacc_actionTableElements = [|3us; 16386us; 25us; 183us; 28us; 182us; 33us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 25us; 183us; 28us; 182us; 33us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 22us; 14us; 41us; 12us; 3us; 32768us; 1us; 16us; 22us; 14us; 41us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 22us; 14us; 41us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 22us; 14us; 41us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 42us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 41us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 25us; 183us; 28us; 182us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 25us; 183us; 28us; 182us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 25us; 183us; 28us; 182us; 0us; 16401us; 20us; 16403us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 25us; 183us; 27us; 56us; 28us; 182us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 1us; 32768us; 4us; 39us; 0us; 16402us; 20us; 16403us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 25us; 183us; 27us; 56us; 28us; 182us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16404us; 1us; 32768us; 7us; 43us; 20us; 16403us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 25us; 183us; 27us; 56us; 28us; 182us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 26us; 65us; 0us; 16407us; 14us; 32768us; 7us; 49us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 0us; 16408us; 14us; 32768us; 1us; 161us; 7us; 51us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16409us; 14us; 32768us; 7us; 53us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 14us; 32768us; 2us; 62us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 32768us; 2us; 61us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 18us; 32768us; 1us; 68us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 55us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 79us; 35us; 88us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 18us; 32768us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 56us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 1us; 32768us; 26us; 64us; 18us; 32768us; 1us; 68us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 55us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 79us; 35us; 88us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 18us; 32768us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 56us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16412us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 14us; 32768us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 38us; 72us; 14us; 32768us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 38us; 71us; 18us; 32768us; 1us; 68us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 55us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 79us; 35us; 88us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 18us; 32768us; 1us; 68us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 55us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 79us; 35us; 88us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 1us; 32768us; 39us; 75us; 1us; 32768us; 39us; 76us; 18us; 32768us; 1us; 68us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 55us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 79us; 35us; 88us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 18us; 32768us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 56us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 1us; 32768us; 2us; 78us; 0us; 16413us; 1us; 32768us; 1us; 81us; 1us; 32768us; 1us; 82us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 14us; 32768us; 2us; 86us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 32768us; 2us; 85us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 18us; 32768us; 1us; 68us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 55us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 79us; 35us; 88us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 18us; 32768us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 56us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16414us; 1us; 32768us; 1us; 90us; 1us; 32768us; 1us; 91us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 14us; 32768us; 7us; 95us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 32768us; 7us; 94us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 14us; 32768us; 7us; 99us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 32768us; 7us; 98us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 14us; 32768us; 2us; 103us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 32768us; 2us; 102us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 18us; 32768us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 56us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 18us; 32768us; 1us; 67us; 3us; 37us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 27us; 56us; 29us; 181us; 30us; 124us; 31us; 126us; 32us; 50us; 34us; 80us; 35us; 89us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16415us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 1us; 32768us; 2us; 109us; 0us; 16418us; 0us; 16419us; 3us; 16421us; 2us; 168us; 5us; 172us; 9us; 116us; 2us; 16421us; 5us; 172us; 9us; 116us; 0us; 16422us; 1us; 16422us; 2us; 162us; 0us; 16423us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 16424us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 1us; 16447us; 1us; 119us; 13us; 16452us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 1us; 32768us; 2us; 121us; 0us; 16425us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16426us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 16427us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 0us; 16428us; 3us; 16429us; 22us; 145us; 23us; 146us; 24us; 147us; 3us; 16430us; 22us; 145us; 23us; 146us; 24us; 147us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 9us; 16434us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 9us; 16435us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 5us; 16436us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 5us; 16437us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 5us; 16438us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 5us; 16439us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 11us; 16440us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 13us; 32768us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 12us; 16441us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 32768us; 6us; 173us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 14us; 16454us; 8us; 175us; 12us; 155us; 13us; 154us; 14us; 148us; 15us; 149us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 143us; 21us; 144us; 22us; 145us; 23us; 146us; 24us; 147us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 3us; 32768us; 1us; 166us; 22us; 169us; 41us; 165us; 1us; 16442us; 5us; 172us; 3us; 32768us; 1us; 166us; 22us; 169us; 41us; 165us; 1us; 16443us; 5us; 172us; 0us; 16444us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16445us; 3us; 32768us; 1us; 166us; 22us; 169us; 41us; 165us; 1us; 16446us; 5us; 172us; 0us; 16447us; 3us; 32768us; 1us; 166us; 22us; 169us; 41us; 165us; 2us; 32768us; 2us; 168us; 5us; 172us; 0us; 16448us; 8us; 32768us; 1us; 161us; 10us; 163us; 21us; 179us; 22us; 169us; 29us; 181us; 41us; 165us; 42us; 177us; 43us; 178us; 1us; 16449us; 5us; 172us; 0us; 16450us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16451us; 0us; 16453us; 13us; 32768us; 1us; 161us; 10us; 163us; 11us; 122us; 21us; 179us; 22us; 169us; 29us; 181us; 30us; 124us; 31us; 126us; 36us; 156us; 37us; 158us; 41us; 118us; 42us; 177us; 43us; 178us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 42us; 180us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 0us; 16461us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 99us; 101us; 102us; 123us; 124us; 126us; 147us; 148us; 149us; 151us; 152us; 167us; 168us; 183us; 184us; 199us; 200us; 201us; 203us; 205us; 219us; 233us; 248us; 263us; 282us; 301us; 303us; 322us; 341us; 342us; 356us; 370us; 385us; 400us; 419us; 438us; 440us; 442us; 461us; 480us; 482us; 483us; 485us; 487us; 501us; 515us; 530us; 545us; 564us; 583us; 584us; 586us; 588us; 602us; 616us; 631us; 646us; 660us; 674us; 689us; 704us; 718us; 732us; 747us; 762us; 781us; 800us; 801us; 802us; 803us; 804us; 806us; 807us; 808us; 812us; 815us; 816us; 818us; 819us; 833us; 847us; 849us; 863us; 865us; 866us; 880us; 881us; 895us; 909us; 910us; 914us; 918us; 919us; 920us; 921us; 931us; 941us; 947us; 953us; 959us; 965us; 977us; 991us; 1004us; 1019us; 1034us; 1048us; 1062us; 1076us; 1090us; 1104us; 1118us; 1132us; 1146us; 1160us; 1174us; 1188us; 1202us; 1216us; 1220us; 1222us; 1226us; 1228us; 1229us; 1243us; 1244us; 1248us; 1250us; 1251us; 1255us; 1258us; 1259us; 1268us; 1270us; 1271us; 1285us; 1286us; 1287us; 1301us; 1302us; 1303us; 1304us; 1306us; 1307us; 1308us; 1309us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 7us; 5us; 9us; 7us; 5us; 7us; 5us; 9us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 16416us; 16417us; 65535us; 16418us; 16419us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16444us; 65535us; 16445us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 65535us; 16450us; 65535us; 16451us; 16453us; 65535us; 16455us; 16456us; 16457us; 65535us; 16458us; 16459us; 16460us; 16461us; |]
let _fsyacc_reductions ()  =    [| 
# 430 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 439 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "CPar.fsy"
                                                               Prog _1 
                   )
# 41 "CPar.fsy"
                 : Absyn.program));
# 450 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "CPar.fsy"
                                                               [] 
                   )
# 45 "CPar.fsy"
                 : 'gentype_Topdecs));
# 460 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 46 "CPar.fsy"
                 : 'gentype_Topdecs));
# 472 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdec));
# 483 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               _1 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdec));
# 494 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Vardec));
# 506 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 59 "CPar.fsy"
                 : 'gentype_Vardesc));
# 517 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 60 "CPar.fsy"
                 : 'gentype_Vardesc));
# 528 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _2                                      
                   )
# 61 "CPar.fsy"
                 : 'gentype_Vardesc));
# 539 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "CPar.fsy"
                 : 'gentype_Vardesc));
# 550 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Vardesc));
# 562 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 67 "CPar.fsy"
                 : 'gentype_Fundec));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Fundec));
# 589 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "CPar.fsy"
                                                               [] 
                   )
# 72 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 599 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               _1 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 610 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "CPar.fsy"
                                                               [_1]     
                   )
# 77 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 78 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CPar.fsy"
                                                               Block _2 
                   )
# 82 "CPar.fsy"
                 : 'gentype_Block));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               [] 
                   )
# 86 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 87 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 666 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 88 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 678 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               _1 
                   )
# 92 "CPar.fsy"
                 : 'gentype_Stmt));
# 689 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               _1 
                   )
# 93 "CPar.fsy"
                 : 'gentype_Stmt));
# 700 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                                   Expr(_1)             
                   )
# 97 "CPar.fsy"
                 : 'gentype_StmtM));
# 711 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                                   Return None          
                   )
# 98 "CPar.fsy"
                 : 'gentype_StmtM));
# 721 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                                   Return(Some(_2))     
                   )
# 99 "CPar.fsy"
                 : 'gentype_StmtM));
# 732 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                                   _1                   
                   )
# 100 "CPar.fsy"
                 : 'gentype_StmtM));
# 743 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                                   If(_3, _5, _7)       
                   )
# 101 "CPar.fsy"
                 : 'gentype_StmtM));
# 756 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                                   Ternary(_2, _4, _6)  
                   )
# 102 "CPar.fsy"
                 : 'gentype_StmtM));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                                   While(_3, _5)        
                   )
# 103 "CPar.fsy"
                 : 'gentype_StmtM));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                                       Block [Stmt (Expr _3); Stmt (While (_5, Block [Stmt _9; Stmt (Expr _7)]))] 
                   )
# 104 "CPar.fsy"
                 : 'gentype_StmtM));
# 795 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 108 "CPar.fsy"
                 : 'gentype_StmtU));
# 808 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 109 "CPar.fsy"
                 : 'gentype_StmtU));
# 820 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                                  Ternary(_2, _4, _6)  
                   )
# 110 "CPar.fsy"
                 : 'gentype_StmtU));
# 833 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 111 "CPar.fsy"
                 : 'gentype_StmtU));
# 845 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                                        Block [Stmt (Expr _3); Stmt (While (_5, Block [Stmt _9; Stmt (Expr _7)]))] 
                   )
# 112 "CPar.fsy"
                 : 'gentype_StmtU));
# 859 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               Access _1           
                   )
# 116 "CPar.fsy"
                 : 'gentype_Expr));
# 870 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               _1                  
                   )
# 117 "CPar.fsy"
                 : 'gentype_Expr));
# 881 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               _1                  
                   )
# 121 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 892 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 122 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 123 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 916 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 124 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 927 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 125 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 938 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 126 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 948 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 127 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 960 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 128 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 129 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 984 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 996 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 131 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1008 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 132 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1020 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1032 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 134 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1044 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 135 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1056 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 136 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 137 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1080 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 138 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1092 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 139 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1104 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               PreInc _2           
                   )
# 140 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1115 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               PreDec _2           
                   )
# 141 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               CstI _1             
                   )
# 145 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1137 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               _2                  
                   )
# 146 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1148 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Addr _2             
                   )
# 147 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1159 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               AccVar _1           
                   )
# 151 "CPar.fsy"
                 : 'gentype_Access));
# 1170 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               _2                  
                   )
# 152 "CPar.fsy"
                 : 'gentype_Access));
# 1181 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 153 "CPar.fsy"
                 : 'gentype_Access));
# 1192 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 154 "CPar.fsy"
                 : 'gentype_Access));
# 1203 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 155 "CPar.fsy"
                 : 'gentype_Access));
# 1215 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               []       
                   )
# 159 "CPar.fsy"
                 : 'gentype_Exprs));
# 1225 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               _1       
                   )
# 160 "CPar.fsy"
                 : 'gentype_Exprs));
# 1236 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               [_1]     
                   )
# 164 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1247 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 165 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1259 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1       
                   )
# 169 "CPar.fsy"
                 : 'gentype_Const));
# 1270 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               _1       
                   )
# 170 "CPar.fsy"
                 : 'gentype_Const));
# 1281 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               - _2     
                   )
# 171 "CPar.fsy"
                 : 'gentype_Const));
# 1292 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               -1       
                   )
# 172 "CPar.fsy"
                 : 'gentype_Const));
# 1302 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               TypI     
                   )
# 176 "CPar.fsy"
                 : 'gentype_Type));
# 1312 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               TypC     
                   )
# 177 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1323 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 47;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
